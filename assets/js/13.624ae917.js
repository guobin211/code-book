(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{362:function(a,t,e){"use strict";e.r(t);var r=e(42),s=Object(r.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"changecheck变更检测"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#changecheck变更检测"}},[a._v("#")]),a._v(" ChangeCheck变更检测")]),a._v(" "),e("h2",{attrs:{id:"变更检测原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#变更检测原理"}},[a._v("#")]),a._v(" 变更检测原理")]),a._v(" "),e("p",[a._v("innerHTML:  render html string O(template size) + 重新创建所有 DOM 元素 O(DOM size)")]),a._v(" "),e("h2",{attrs:{id:"前端框架的变更检测"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前端框架的变更检测"}},[a._v("#")]),a._v(" 前端框架的变更检测")]),a._v(" "),e("p",[a._v("初始渲染：Virtual DOM > 脏检查 >= 依赖收集\n小量数据更新：依赖收集 >> Virtual DOM + 优化 > 脏检查（无法优化） > Virtual DOM 无优化\n大量数据更新：脏检查 + 优化 >= 依赖收集 + 优化 > Virtual DOM（无法/无需优化）>> MVVM 无优化")]),a._v(" "),e("h3",{attrs:{id:"vue2-x数据劫持"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue2-x数据劫持"}},[a._v("#")]),a._v(" Vue2.x数据劫持")]),a._v(" "),e("p",[a._v("依赖收集：重新收集依赖 O(data change) + 必要 DOM 更新 O(DOM change)")]),a._v(" "),e("h3",{attrs:{id:"react-vdom-diff算法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#react-vdom-diff算法"}},[a._v("#")]),a._v(" React VDom Diff算法")]),a._v(" "),e("p",[a._v("Virtual DOM: render Virtual DOM + diff O(template size) + 必要的 DOM 更新 O(DOM change)")]),a._v(" "),e("ol",[e("li",[a._v("函数式编程")]),a._v(" "),e("li",[a._v("可以渲染到其他平台")])]),a._v(" "),e("h3",{attrs:{id:"angular-脏检查"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#angular-脏检查"}},[a._v("#")]),a._v(" Angular 脏检查")]),a._v(" "),e("p",[a._v("脏检查：scope digest O(watcher count) + 必要 DOM 更新 O(DOM change)")])])}),[],!1,null,null,null);t.default=s.exports}}]);